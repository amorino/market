datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model User {
  id             String           @id @default(cuid())
  email          String           @unique
  password       Password?
  userRoles      UserRole[]
  raffleEntries  RaffleEntry[]
  DiscordProfile DiscordProfile[]
  createdAt      DateTime         @default(now())
  updatedAt      DateTime         @updatedAt
}

model UserRole {
  id     String @id @default(cuid())
  user   User   @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId String @unique
  role   Role   @relation(fields: [roleId], references: [id])
  roleId String @unique
}

model Role {
  id          String     @id @default(cuid())
  name        String
  permissions Int
  UserRoles   UserRole[]
}

model DiscordProfile {
  id               String @id @unique
  user             User   @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId           String @unique
  displayName      String
  displayAvatarUrl String
  authToken        String

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Raffle {
  id            String        @id @default(cuid())
  name          String
  raffleEntries RaffleEntry[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model RaffleEntry {
  id       String @id @default(cuid())
  raffle   Raffle @relation(fields: [raffleId], references: [id], onDelete: Cascade)
  raffleId String @unique

  user   User   @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId String @unique
}

model Password {
  hash String

  user   User   @relation(fields: [userId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  userId String @unique
}
